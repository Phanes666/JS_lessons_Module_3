// const name = 'student name';
// console.log(name);

// String.prototype.sayHello = function (query) {
//     console.log(`Hello my name is ${query}`);
// }



// const str = 'some value';
// name.sayHello();
// str.sayHello('Alice')
// -----------------------------------------------------------



// const user = {
//     name: 'User name',
//     age: 28,
//     sayHello() {
//         console.log(`Hello my name is ${this.name}`);
//     },
//     getAge() {
//         console.log(`my age ${this.age}`);
//     }
// }

// const student = Object.create(user);
// student.name = 'Alice';
// console.log('student', student.getAge());
// // console.log(student);
// // student.sayHello()


// const studentHTML = Object.create(student)

// studentHTML.age = 19;

// console.log(studentHTML);
// studentHTML.sayHello()
// studentHTML.getAge()
//---------------------------------------------------------------




// class User {
//     #email;
//     constructor(name, age = 10, email) {
//         this.#email = email;
//         this.name = name;
//         this.age = age;
//     }

//     showName() {
//         console.log(`Hello my name is ${this.name}`);
//     }

//     removeAge() {
//         delete this.age
//     }

//     #checkPassword() {
//         const password = prompt();
//         return password === '1111'
//     }

//     get email() {

//         if (this.#checkPassword()) {
//             return this.#email
//         }

//         return 'üòÇ'
//     }

//     set email(newEmail) {

//         if (this.#checkPassword()) {
//             this.#email = newEmail;
//         }
//     }
// }

// const artem = new User('Artem', 28, 'test@gmail.com');
// artem.showName()p-
// console.log(artem.email);

// class Student extends User {
//     constructor(name, age, email, points) {
//         super(name, age, email)
//         this.points = points;
//     }
// }

// class StudentHTML extends Student {
//     constructor(name, age, email, points) {
//         super(name, age, email, points)
//     }
// }

// const artem = new StudentHTML('Artem', 28, 'test@gmail.com', 45)
// artem.showName()
// artem.email = 'artem@gmail.com'
// console.log(artem.email);
// console.log(artem.email);
// artem.email = 'artem@gmail.com';
// console.log(artem.#email);



// console.log(artem.name);
// artem.name = false;
// console.log(artem.name);
// const alice = new User('Alice', 33);
// const kate = new User('Kate', 22);

// console.log(artem);
// console.log(alice);
// console.log(kate);











// –ü–µ—Ä–µ—Ä–≤–∞ –¥–æ 21.25





// Task-1
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å Rectangle, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –ø—Ä—è–º–æ–∫—É—Ç–Ω–∏–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ width —Ç–∞ height, –∞ —Ç–∞–∫–æ–∂ –ø—É–±–ª—ñ—á–Ω—ñ –≥–µ—Ç–µ—Ä–∏ —Ç–∞ —Å–µ—Ç–µ—Ä–∏ –¥–ª—è —Ü–∏—Ö –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π. –ì–µ—Ç–µ—Ä–∏ –ø–æ–≤–∏–Ω–Ω—ñ –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π, –∞ —Å–µ—Ç–µ—Ä–∏ –ø–æ–≤–∏–Ω–Ω—ñ –¥–æ–∑–≤–æ–ª—è—Ç–∏ –∑–º—ñ–Ω—é–≤–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç–µ–π –∑ –≤–∞–ª—ñ–¥–∞—Ü—ñ—î—é.

// class Rectangle {
//     #width;
//     #height;
//     constructor({ width, height } = {}) {
//         this.#width = width;
//         this.#height = height
//     }
//     get width() {
//         return this.#width;
//     }
//     set width(newWidth) {
//         if (typeof newWidth === 'number' && newWidth > 0) {
//             this.#width = newWidth;
//         } else {
//             console.log('–®–∏—Ä–∏–Ω–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –±—ñ–ª—å—à–µ –∑–∞ 0');
//         }
//     }

//     get height() {
//         return this.#height;
//     }

//     set height(newHeight) {
//         if (typeof newHeight === 'number' && newHeight > 0) {
//             this.#height = newHeight;
//         } else {
//             console.log('–í–∏—Å–æ—Ç–∞ –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ —á–∏—Å–ª–æ–º –±—ñ–ª—å—à–µ –∑–∞ 0');
//         }
//     }
// }
// const item = new Rectangle({ width: 10, height: 5 });

// console.log(item.width); // get
// item.width = 12 // set
// console.log(item.width); //get

// Task-2
// –†–µ–∞–ª—ñ–∑—É–π—Ç–µ –∫–ª–∞—Å Student, —è–∫–∏–π —É—Å–ø–∞–¥–∫–æ–≤—É–≤–∞—Ç–∏–º–µ—Ç—å—Å—è –≤—ñ–¥ –∫–ª–∞—Å—É User. –¶–µ–π –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ —Ç–∞–∫—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ:
// name –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (—ñ–º'—è, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// surname –ø—Ä–∏–≤–∞—Ç–Ω–∞ –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å (–ø—Ä—ñ–∑–≤–∏—â–µ, —É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User),
// year (—Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É).

// –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getFullName() (—É—Å–ø–∞–¥–∫–æ–≤—É—î—Ç—å—Å—è –≤—ñ–¥ User), –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —è–∫–æ–≥–æ –º–æ–∂–Ω–∞ –≤–∏–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ—á–∞—Å–Ω–æ —ñ–º'—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ —Å—Ç—É–¥–µ–Ω—Ç–∞.
// –¢–∞–∫–æ–∂ –∫–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –º–µ—Ç–æ–¥ getCourse(), —è–∫–∏–π –≤–∏–≤–æ–¥–∏—Ç–∏–º–µ –ø–æ—Ç–æ—á–Ω–∏–π –∫—É—Ä—Å —Å—Ç—É–¥–µ–Ω—Ç–∞ (–≤—ñ–¥ 1 –¥–æ 5, —è–∫—â–æ –∑–Ω–∞—á–µ–Ω–Ω—è –ø–µ—Ä–µ–≤–∏—â—É—î 5  –∫—É—Ä—Å –≤–∏–≤–æ–¥–∏—Ç–∏ —â–æ —Å—Ç—É–¥–µ–Ω—Ç —è–≤–ª—è—î—Ç—Å—å—è –≤–∏–ø—É—Å–∫–Ω–∏–∫–æ–º).
// –ö—É—Ä—Å –æ–±—á–∏—Å–ª—é—î—Ç—å—Å—è —Ç–∞–∫: –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥ –ø–æ—Ç–æ—á–Ω–æ–≥–æ —Ä–æ–∫—É –≤—ñ–¥–Ω—è—Ç–∏ —Ä—ñ–∫ –≤—Å—Ç—É–ø—É –¥–æ –≤—É–∑—É. –ü–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–∫ –æ—Ç—Ä–∏–º–∞—î—Ç–µ —Å–∞–º–æ—Å—Ç—ñ–π–Ω–æ (—á–∏—Ç–∞—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—é!!!).
// –ü—Ä–∏–∫–ª–∞–¥ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –µ–∫–∑–µ–º–ø–ª—è—Ä—É –∫–ª–∞—Å–∞:
// const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2019);

// class User {
//     #name;
//     #surname;
//     constructor(name, surname) {
//         this.#name = name;
//         this.#surname = surname;
//     }
//     getFullName() {
//         return `${this.#name} ${this.#surname}`
//     }
// }


// class Student extends User {
//     constructor(name, surname, year) {
//         super(name, surname)
//         this.year = year;
//     }
//     getCourse() {
//         const today = new Date();
//         const currentYear = today.getFullYear()
//         const diff = currentYear - this.year;

//         if (currentYear < this.year) {
//             return;
//         }

//         if (diff > 5) {
//             return '–°—Ç—É–¥–µ–Ω—Ç —è–≤–ª—è—î—Ç—Å—å—è –≤–∏–ø—É—Å–∫–Ω–∏–∫–æ–º';
//         }

//         return `${diff} –∫—É—Ä—Å`;
//     }
// }


// const student = new Student('–ü–µ—Ç—Ä–∏–∫', '–ü—è—Ç–æ—á–∫–∏–Ω', 2018);
// console.log(student);
// console.log(student.getFullName()); //–ø–æ–≤–µ—Ä–Ω–µ '–ü–µ—Ç—Ä–∏–∫ –ü—è—Ç–æ—á–∫–∏–Ω'
// console.log(student.getCourse());   //–ø–æ–≤–µ—Ä–Ω–µ 4









// Task-3
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å BankAccount, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–Ω–∫—ñ–≤—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—Ä–∏–≤–∞—Ç–Ω—É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å _balance, —è–∫–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –±–∞–ª–∞–Ω—Å —Ä–∞—Ö—É–Ω–∫—É. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω —Ç–∞–∫–æ–∂ –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ deposit —Ç–∞ withdraw, —è–∫—ñ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –∑–¥—ñ–π—Å–Ω—é–≤–∞—Ç–∏ –æ–ø–µ—Ä–∞—Ü—ñ—ó –∑ –¥–µ–ø–æ–∑–∏—Ç–æ–º —Ç–∞ –∑–Ω—è—Ç—Ç—è–º –∫–æ—à—Ç—ñ–≤ –∑ —Ä–∞—Ö—É–Ω–∫—É. –ü—Ä–∏ —Ü—å–æ–º—É _balance –ø–æ–≤–∏–Ω–Ω–∞ –±—É—Ç–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –ª–∏—à–µ –≤ –º–µ–∂–∞—Ö –∫–ª–∞—Å—É BankAccount —Ç–∞ –π–æ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω–∏—Ö –º–µ—Ç–æ–¥—ñ–≤.

// class BankAccount {
//     #balance
//     constructor() {
//         this.#balance = 0;
//     }
//     deposit(amount) {
//         if (amount > 0) {
//             this.#changeBalance(amount);
//             console.log(`–ó–¥—ñ–π—Å–Ω–µ–Ω–æ –¥–µ–ø–æ–∑–∏—Ç ${amount}`);
//             return;
//         }

//         console.log(`–°—É–º–∞ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–∞ –∑–∞ 0`);
//     }
//     withdraw(amount) {
//         if (amount <= 0) {
//             console.log(`–°—É–º–∞ –º–∞—î –±—É—Ç–∏ –±—ñ–ª—å—à–∞ –∑–∞ 0`);
//         } else if (amount > this.#balance) {
//             console.log('–ù–µ–¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ –Ω–∞ —Ä–∞—Ö—É–Ω–∫—É');
//         } else {
//             this.#changeBalance(-amount);
//             console.log(`–ó–Ω—è—Ç–æ ${amount}`);
//         }
//     }
//     #changeBalance(amount) {
//         this.#balance += amount;
//     }
// }


// const instance = new BankAccount()
// instance.deposit(100)
// instance.deposit(1200)
// instance.withdraw(1000)
// console.log(instance);





// Task-4
// –ù–µ–æ–±—Ö—ñ–¥–Ω–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –∫–ª–∞—Å Hero, —è–∫–∏–π –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—î –≥–µ—Ä–æ—è –∑ –≥—Ä–∏. –ö–ª–∞—Å –ø–æ–≤–∏–Ω–µ–Ω –º–∞—Ç–∏ –ø—É–±–ª—ñ—á–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ name, level —Ç–∞ health, –∞ —Ç–∞–∫–æ–∂ –º–µ—Ç–æ–¥–∏ attack —Ç–∞ heal, —â–æ –¥–æ–∑–≤–æ–ª—è—é—Ç—å –≥–µ—Ä–æ—é –∞—Ç–∞–∫—É–≤–∞—Ç–∏ —Ç–∞ –≤—ñ–¥–Ω–æ–≤–ª—é–≤–∞—Ç–∏ –∑–¥–æ—Ä–æ–≤'—è –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ.
// –¢–∞–∫–æ–∂ —Å—Ç–≤–æ—Ä–∏ —Ñ—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª –¥–ª—è –ø—ñ–¥—Ä–∞—Ö—É–Ω–∫—É —Å—Ç–≤–æ—Ä–µ–Ω–∏—Ö –≥–µ—Ä–æ—ó–≤

// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å name –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —ñ–º'—è –≥–µ—Ä–æ—è.
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å level –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —Ä—ñ–≤–µ–Ω—å –≥–µ—Ä–æ—è.
// –í–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å health –º–∞—î –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –ø–æ—Ç–æ—á–Ω–∏–π —Ä—ñ–≤–µ–Ω—å –∑–¥–æ—Ä–æ–≤'—è –≥–µ—Ä–æ—è.
// –ú–µ—Ç–æ–¥ attack –Ω–∞–Ω–æ—Å–∏—Ç—å –ø–æ—à–∫–æ–¥–∂–µ–Ω–Ω—è –≤ —Ä–æ–∑–º—ñ—Ä 10 –æ–¥–∏–Ω–∏—Ü—å. –ú–µ—Ç–æ–¥ heal –¥–æ–¥–∞—î –¥–æ –∑–¥–æ—Ä–æ–≤'—è –≥–µ—Ä–æ—è 10 –æ–¥–∏–Ω–∏—Ü—å.



// class Hero {
//     static counter = 0;
//     static addHero() {
//         this.counter += 1;
//         console.log('–ö—ñ–ª—å–∫—ñ—Å—Ç—å –≥–µ—Ä–æ—ó–≤ ', this.counter);
//     }

//     #level;
//     constructor(name) {
//         this.name = name;
//         this.#level = 1;
//         this.health = 200;
//         Hero.addHero();
//     }

//     attack() {
//         console.log(`Attack with 10 damage`);
//     }

//     heal() {
//         this.health += 10;
//     }
// }

// const bloodseker = new Hero('Bloodseker');
// const bloodseker2 = new Hero('Bloodseker');
// const bloodseker3 = new Hero('Bloodseker');
// const bloodseker4 = new Hero('Bloodseker');
// const bloodseker5 = new Hero('Bloodseker');
// const bloodseker6 = new Hero('Bloodseker');

// console.log(bloodseker.heal());
// console.log(bloodseker);
// console.log(Hero.counter);
