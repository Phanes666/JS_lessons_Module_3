// Arrow function
// expression()//error
// const expression = function (){

// }

// const arrow = () => {
//     console.log('hello');
// }
// arrow()


// function sum(a, b) {
//     return a + b;
// }
// console.log(sum(5, 6));


// const sum = (a, b) =>  a + b
// console.log(sum(5, 6));


// const sum = a =>  a + 6
// console.log(sum(5));



// const foo = (...args) => {
//     // console.log(arguments);
//     console.log(args);
// }

// foo(1, 2, 3, 4, 5, 6)



// const user = {
//     name: 'Test user',
//     // getName(){
//     //     console.log(this.name);
//     // }
//     getName: () => {
//         console.log(this);
//     }
// }
// user.getName()



// const foo = array => console.log(array);

// foo([1, 2, 3, 4])
// foo(['a', 'b', 'c'])



// Callback function



// function add(a, b) {
//     return a + b
// }


// console.log(add(5, 5));
// console.log(add);


// const arr = [1, 2, 3, 4, 5];

// function add(...args) {
//     console.log('add', args);

// }

// function sum(...args) {
// console.log('sum', args);
// }

// function logResult(value, callback) {
// // console.log(callback);
//    const result = callback(...value);
//    console.log(`Result is ${value}`);
// }


// logResult(arr, add)
// logResult(arr, sum)




// function logResult(a, b, callback) {
//     console.log(callback);
//     const result = callback(a, b);
//     console.log(`Result is ${result}`);
// }

// logResult(4, 5, (a, b) => a + b)
// logResult(4, 5, (a, b) => a * b)

// // logResult(4, 5, add)
// // logResult(4, 5, sum)


// // // callback function

// function add(a, b) {
//     return a + b
// }

// function sum(a, b) {
//     return a * b;
// }









// forEach

// const arr = [1, 2, 3, 4, 5];

// // function 


//   function customForEach(arr, callback) {
//         for (let i = 0; i < arr.length; i += 1) {
//             callback(arr[i], i, arr)
//         }
//     }



// customForEach(arr, callback)
// function callback(elem, idx, array) {
//     if (elem === 3) {
//         array.splice(idx, 1)
//     }
// }
// console.log(arr);

// arr.forEach((elem, idx, array) => {
//     console.log('elem', elem);
//     console.log('idx', idx);
//     console.log('array', array);
// })



// const arr = [1, 2, 3, 4, 5];

// arr.forEach((elem, idx, array) => {
//     if (elem === 3) {
//         array.splice(idx, 1);
//     }
//     // return 'Hello world';
//     return elem * elem
// })

// console.log('For Each', arr);




// const arr = [1, 2, 3, 4, 5];
// arr.map((item) => item * item)
// .forEach((elem, idx, array) => console.log(array))










// Task - 1
// –°—Ç–≤–æ—Ä–∏ —Å—Ç—Ä—ñ–ª–æ—á–Ω—É —Ñ—É–Ω–∫—Ü—ñ—é logItems(), —è–∫–∞ –≤–∏–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—Å–∏–≤–∞, –∑—Ä–æ–±–∏ –ø–µ—Ä–µ–±—ñ—Ä –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –º–µ—Ç–æ–¥—É forEach().



// const logItems = arr => arr.forEach((item, idx) => 
// console.log(`${idx + 1} - ${item}`))



// logItems(['Mango', 'Poly', 'Ajax']);
// logItems(['üçé', 'üçá', 'üçë', 'üçå', 'üçã']);



// Task - 2
// –ù–∞–ø–∏—à—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—ñ —Ñ—É–Ω–∫—Ü—ñ—ó:
// createProduct(obj, callback) - –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É –±–µ–∑ id, –∞ —Ç–∞–∫–æ–∂ –∫–æ–ª–ª–±–µ–∫. –§—É–Ω–∫—Ü—ñ—è —Å—Ç–≤–æ—Ä—é—î –æ–±'—î–∫—Ç —Ç–æ–≤–∞—Ä—É, –¥–æ–¥–∞—é—á–∏ –π–æ–º—É —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —É –≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å id —Ç–∞ –≤–∏–∫–ª–∏–∫–∞—î –∫–æ–ª–ª–±–µ–∫ –ø–µ—Ä–µ–¥–∞—é—á–∏ –π–æ–º—É —Å—Ç–≤–æ—Ä–µ–Ω–∏–π –æ–±'—î–∫—Ç.
// logProduct(product) - –∫–æ–ª–±–±–µ–∫ –ø—Ä–∏–π–º–∞—é—á–∏–π –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—É—é—á–∏–π –π–æ–≥–æ –≤ –∫–æ–Ω—Å–æ–ª—å
// logTotalPrice(product) - –∫–æ–ª–±–±–µ–∫, —â–æ –ø—Ä–∏–π–º–∞—î –æ–±'—î–∫—Ç –ø—Ä–æ–¥—É–∫—Ç—É —ñ –ª–æ–≥—ñ—é—î –∑–∞–≥–∞–ª—å–Ω—É –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É –≤ –∫–æ–Ω—Å–æ–ª—å

// function createProduct(obj, callback) {
//     const product = {
//         id: Date.now(),
//         ...obj
//     }
//     callback(product)
// }

// // function logProduct(product) {
// //     console.log(`Product`, product);
// // }

// // function logTotalPrice({ price, quantity }) {
// //     console.log(`Product total price ${price * quantity}`);

// // }

// createProduct({ name: 'üçé', price: 30, quantity: 3 }, logProduct);
// createProduct({ name: 'üçã', price: 20, quantity: 5 }, logTotalPrice);





// Task - 3
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –±—É–¥–µ –æ—Ç—Ä–∏–º—É–≤–∞—Ç–∏ 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∏.
// 1 - –º–∞—Å–∏–≤ —á–∏—Å–µ–ª.
// 2 - —Ñ—É–Ω–∫—Ü—ñ—é —è–∫–∞ –º–∞—î –æ–ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç –º–∞—Å–∏–≤—É.
// –§—É–Ω–∫—Ü—ñ—è –ø–æ–≤–µ—Ä—Ç–∞—î –Ω–æ–≤–∏–π –º–∞—Å–∏–≤ –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç —è–∫–æ–≥–æ —î —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–ª–±–µ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó
// function each(arr, action) {
//     const items = [];

//     arr.forEach(elem => {
//         const result = action(elem);
//         items.push(result);
//     })

//     // arr.forEach(elem => items.push(action(elem)))

//     return items
// }

// console.log(each([64, 49, 36, 25, 16], value => value * 2));
// console.log(each([64, 49, 36, 25, 16], value => value - 10));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], value => Math.ceil(value)));
// console.log(each([1.5, 2.1, 16.4, 9.7, 11.3], value => Math.floor(value)));



// Task-4
// –ù–∞–ø–∏—à—ñ—Ç—å —Ñ—É–Ω–∫—Ü—ñ—é getProductDetails, —è–∫–∞ –ø—Ä–∏–π–º–∞—î —ñ–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä —Ç–æ–≤–∞—Ä—É productId —Ç–∞ –¥–≤—ñ –∫–æ–ª–±–µ–∫-—Ñ—É–Ω–∫—Ü—ñ—ó successCallback —Ç–∞ errorCallback. –§—É–Ω–∫—Ü—ñ—è getProductDetails –ø–æ–≤–∏–Ω–Ω–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –ø—Ä–æ –≤–∫–∞–∑–∞–Ω–∏–π —Ç–æ–≤–∞—Ä —Ç–∞ –ø–µ—Ä–µ–¥–∞—Ç–∏ —ó—Ö —É successCallback.  –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏, –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è errorCallback —ñ –ø–µ—Ä–µ–¥–∞—î—Ç—å—Å—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É.
// const products = [
//     {
//         id: 1,
//         name: "–¢–µ–ª–µ—Ñ–æ–Ω",
//         price: 10000,
//         description: "–°–º–∞—Ä—Ç—Ñ–æ–Ω –∑ –≤–∏—Å–æ–∫–æ—è–∫—ñ—Å–Ω–∏–º –¥–∏—Å–ø–ª–µ—î–º —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–º –ø—Ä–æ—Ü–µ—Å–æ—Ä–æ–º.",
//     },
//     {
//         id: 2,
//         name: "–ù–æ—É—Ç–±—É–∫",
//         price: 25000,
//         description: "–õ–µ–≥–∫–∏–π —Ç–∞ –ø–æ—Ç—É–∂–Ω–∏–π –Ω–æ—É—Ç–±—É–∫ –¥–ª—è —Ä–æ–±–æ—Ç–∏ —Ç–∞ —Ä–æ–∑–≤–∞–≥.",
//     },
//     {
//         id: 3,
//         name: "–ü–ª–∞–Ω—à–µ—Ç",
//         price: 8000,
//         description: "–ö–æ–º–ø–∞–∫—Ç–Ω–∏–π –ø–ª–∞–Ω—à–µ—Ç –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–æ–Ω—Ç–µ–Ω—Ç—É.",
//     },
// ];

// function getProductDetails(id, success, error) {
//     for (const product of products) {
//         if (product.id === id) {
//             return success(product); //some value;
//         }
//     }

//     error(id);
// }

// getProductDetails(3, handleSuccess, handleError)
// // getProductDetails(44, handleSuccess, handleError)

// function handleSuccess(message) {
//     console.log(`‚úÖ Success!`, message);
// }

// function handleError(productId) {
//     console.log(`‚ùå Error! Product with ${productId} id not found`);
// }






// const arr = [1, 2, [5, 6, [2, 2]]];
// [1, 2]; // 18
// [5, 6]; //15
// [2, 2]; //4

// function add(arr) {
//     let total =0;
//     for (const value of arr) {
//         if (Array.isArray(value)) {
//             total += add(value)
//         } else {
//             total += value
//         }
//     }
//     return total;
// }

// console.log(add(arr));



// const arr = [1, 2, [5, 'hello', 6, [2, 'world', { a: 22, b: 25 }, 2]]];
// [1, 2]; // 18
// [5, 6]; //15
// [2, 2]; //4

// function add(arr) {
//     let total = 0;
//     for (const value of arr) {
//         if (Array.isArray(value)) {
//             total += add(value)
//         } else if (typeof value === 'number') {
//             total += value
//         } else if (typeof value === 'object') {
//             const values = Object.values(value);
//             total += add(values)
//         }
//     }
//     return total;
// }

// console.log(add(arr));





// —á–∏ –º–æ–∂–Ω–∞ –±—É–¥–µ –±—É–ª—å –ª–∞—Å–∫–∞ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏ —Ü—é –∑–∞–¥–∞—á—É(–∑–Ω–∞–π—à–æ–≤ –≤ —ñ–Ω—Ç–µ—Ä–Ω–µ—Ç—ñ —ñ –±—É–≤ –≤–ø–µ–≤–Ω–µ–Ω–∏–π —â–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—å –±—É–¥–µ 123)
// const a = {}
// const b = {
//     key: 'b'
// }
// const c = {
//     key: 'c'
// }
// console.log(`${a}`);
// a[b] = 123;
// a[c] = 456;
// console.log(a);
// console.log(a[b])
// —á–æ–º—É –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ –≤ –∫–æ–Ω—Å–æ–ª—ñ –±—É–¥–µ 456 ? —ñ —â–æ —Å–∫–∞–∂–µ—Ç–µ –Ω–∞ —Ä–∞—Ö—É–Ω–æ–∫ —Ü—ñ—î—ó –¥–æ–∫–∏ https://uk.javascript.info/ , —á–∏ –∫—Ä–∞—à–µ —á–∏—Ç–∞—Ç–∏ —Ç—ñ–ª—å–∫–∏ mdn?













