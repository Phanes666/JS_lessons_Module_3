/***** –û–≥–æ–ª–æ—à–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö *****/

// let value;
// value = 15;
// value = 20;

// console.log(value);



/***** –ü—Ä–∏–º—ñ—Ç–∏–≤–Ω—ñ —Ç–∏–ø–∏ –¥–∞–Ω–∏—Ö ****/

// Number

// let value = 10.45;
// console.log(value);

// console.log(5 === 5);
// –û—Å–æ–±–ª–∏–≤–∏–π –ø—ñ–¥—Ç–∏–ø NaN
// console.log(NaN === NaN);
// console.log(Number('22.5aa'));
// console.log(undefined + 1);
// console.log(null + 1); // 0 + 1
// console.log(false + 1); // 0
// console.log(true + 1); // 1 + 1


// String

// –¢–∏–ø–∏ —Ä—è–¥–∫—ñ–≤ '' "" ``

// console.log("I'm");

// console.log('Total 25 + 15');
// const total = 25 + 15;
// console.log(`Total ${total}`);

// Boolean (true, false)
// true  => 1
// false => 0


// undefined

// null

// –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ç–∏–ø—É –¥–∞–Ω–∏—Ö –∑ —è–∫–∏–º –ø—Ä–∞—Ü—é—î–º–æ –º–µ—Ç–æ–¥ typeof
// const value = '10';
// console.log(typeof value);
// console.log(typeof value === 'string');


/***** –ö–æ–º—É–Ω—ñ–∫–∞—Ü—ñ—è –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º —Ç–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è —è–∫–æ–≥–æ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—É *****/

// console.log('result', 10 + 15);
// console.log('result', 10 + 15);
// console.log('result', 10 + 15);
// alert('–ü—Ä–∏–≤—ñ—Ç –≤—á–∏ JS')

// const message = prompt("–í–≤–µ–¥—ñ—Ç—å —ñ'–º—è")
// console.log(message);

// const result = confirm('–ë—É–¥–µ—à –≤—á–∏—Ç–∏ JS ?');
// console.log(result);


/***** –û—Å–Ω–æ–≤–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ *****/

// >
// console.log(25 > 21);

// <
// console.log(25 < 24);
// ==

// console.log('false' == 0);
// console.log(false == 0);

// ===

// console.log(Number('25') === 25);

// <=
// console.log(24 <= 25);
// console.log(25 <= 25);
// >=

// console.log(26 >= 20);
// console.log(26 >= 26);

// !=
// console.log('1' != 1);

// !==
// console.log('1' !== 1);

// –ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–±–æ—Ç–∏

// console.log(1 == true);

// console.log(1 === true);

// console.log('0' == false); 

// console.log('0' === false);

// console.log('Papaya' < 'papaya');

// console.log('a' < 'aAbBc');
// console.log('Papaya' === 'papaya');


/***** –ó–Ω–∞—á–µ–Ω–Ω—è —è–∫—ñ –∑–∞–≤–∂–¥–∏ –±—É–¥—É—Ç—å –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω—ñ –¥–æ false (–û–±–æ–≤'—è–∑–∫–æ–≤–æ!!!) *****/

//  0 (—á–∏—Å–ª–æ –Ω—É–ª—å)
// console.log(Boolean(0));
// // "" (–ø–æ—Ä–æ–∂–Ω—ñ–π —Ä—è–¥–æ–∫)
// console.log(Boolean(''));
// // NaN
// console.log(Boolean(NaN));
// // undefined
// console.log(Boolean(undefined));
// // null
// console.log(Boolean(null));
// // false
// console.log(Boolean(false));

/***** –õ–æ–≥—ñ—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ *****/
// const sum = 10
// console.log(0 < sum  && sum < 20);
// !
// console.log(10 !== 10);
// console.log(Boolean(''));
// console.log(!'');

// ||

// console.log(2 || 0 || 1);

// ?? —Ä–µ–∞–≥—É—î –ª–∏—à–µ –Ω–∞ null undefined

// console.log(0 ?? 1);
// console.log(false ?? 0);
// console.log(null ?? 1);
// console.log(undefined ?? 10);

// let qty; //undefined

// console.log(qty ?? '–¢–∞–∫–æ–≥–æ —Ç–æ–≤–∞—Ä—É –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');

// &&
// console.log(false && 1);
// console.log(NaN && 2);

// console.log(1 && 5 && 23);
// console.log(1 && 0 && 23);


// console.log(1 || 0 && 23);

// –ü—Ä–∏–∫–ª–∞–¥–∏ —Ä–æ–±–æ—Ç–∏

// console.log(true && 3);

// console.log(false && 3);

// console.log(true && 4 && 'kiwi');

// console.log(true && 0 && 'kiwi');

// console.log(true || 3);

// console.log( 3 ||true || 4);

// console.log('' || false || 7);

// console.log(null || 2 || undefined);

// console.log('' ??  4);

// console.log(false ?? 7);

// console.log(null ?? 7);

// console.log(undefined ?? 7);


/***** –ú–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ *****/

// const value = 10
// +
// const result = value + 15
// -
// const result = value - 5
// *
// const result = 10 + value * 5
// /

// %
// const result = value % 2 !== 0
// const result = !(value % 2) //=>  10 % 2 => !0 
// console.log(result);
// console.log(Boolean(0)) === console.log(!!0);

// false => HE HE 0
/***** –ö–æ–º–±—ñ–Ω–æ–≤–∞–Ω—ñ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∏ *****/

// +=

// -=

// *=

// /=



/***** –ú–µ—Ç–æ–¥–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∫–∏ –∑ —á–∏—Å–ª–∞–º–∏ (—Ç–∏–ø –¥–∞–Ω–∏—Ö Number) *****/

// const str = '25.7a32px';
// Number.parseInt()
// console.log(Number.parseInt(str));
// Number.parseFloat()
// console.log(Number.parseFloat(str));
// Number.isNaN()  —Ç–∞ –º–µ—Ç–æ–¥ isNaN()
// const num = Number(str) // NaN
// console.log(Number.isNaN(num));
// console.log(isNaN(num));
// console.log('=====================================');




// const str = '25.7a32px';
// console.log(typeof str);
// console.log(Number.isNaN(str));// NaN //String
// console.log(isNaN(str)); //Number(str) => NaN

// let value;

// value += 1;
// console.log(value);
// console.log(Number.isNaN(value))
// console.log(Number.isNaN(str))
// console.log(num === NaN);




// –ö–ª–∞—Å—Å Math
// const value = 11.500
// console.log(Math.floor(value));

// console.log(Math.ceil(value));

// Math.round()
// console.log(Math.round(value));


// console.log(Math.pow(5, 4));
// console.log(5 ** 4);


/***** –ú–µ—Ç–æ–¥–∏ —Ç–∞ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è —Ä–æ–±–æ—Ç–∫–∏ –∑ —Ä—è–¥–∫–∞–º–∏ (—Ç–∏–ø –¥–∞–Ω–∏—Ö String) *****/

// const str = 'Hello world';
// // length
// console.log(str.length);
// // toLowerCase()
// console.log(str.toLowerCase());
// // toUpperCase()
// console.log(str.toUpperCase());
// indexOf()

// console.log(str.indexOf(' '));
// console.log(str.indexOf('H'));
// console.log(str.includes('world'));
// const str = 'Hello world';
// endsWith()
// console.log(str.endsWith(' world'));
// startsWith()
// console.log(str.startsWith('h'));
// replace()
// console.log(str.replace('l', 'üçï'));
// console.log(str);
// // replaceAll()
// console.log(str.replaceAll('l','üçü'));
// slice()

// console.log(str.slice(0, str.length-1));
// console.log(str);





// **************************************** –ü—Ä–∞–∫—Ç–∏–∫–∞ ****************************** //

// Task - 1

// –í–∏–∫–æ–Ω–∞–≤—à–∏ –º–∞—Ç–µ–º–∞—Ç–∏—á–Ω—ñ –æ–ø–µ—Ä–∞—Ü—ñ—ó —Ç–∞ –∑–∞—Å—Ç–æ—Å—É–≤–∞–≤—à–∏ —à–∞–±–ª–æ–Ω—ñ —Ä—è–¥–∫–∏ –≤–∏–≤–µ–¥–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∑–∞–≥–∞–ª—å–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ç–∞ —Ü—ñ–Ω—É –∑–∞ –∫–æ–∂–µ–Ω –ø—Ä–æ–¥—É–∫—Ç —Ç–∞ –∑–∞ –≤—Å—ñ –ø—Ä–æ–¥—É–∫—Ç–∏ –≤ –∫–æ—à–∏–∫—É

const apple = 'üçé';

const appleQuantity = 8;

const applePrice = 34;

// const  appleMessage = `${apple} total cost ${appleQuantity * applePrice}`
// console.log(appleMessage);
const lemon = 'üçã';

const lemonQuantity = 3;

const lemonPrice = 72;

// const lemonMessage = lemon + ' total cost ' + (lemonQuantity + lemonPrice)
// console.log(lemonMessage);
// const cherry = 'üçí';

// const cherryQuantity = 3;

// const cherryPrice = 72;

// const cherryMessage = `${cherry} total cost ${cherryQuantity * cherryPrice}`;

// console.log(cherryMessage);
// const result = `Total ${(applePrice * appleQuantity) + (lemonQuantity * lemonPrice) + (cherryQuantity * cherryPrice)}`

// console.log(result);

// Task - 2

// –ù–∞–ø–∏—à–∏ —Å–∫—Ä–∏–ø—Ç, —è–∫–∏–π –ø–µ—Ä–µ–≤–µ–¥–µ –∑–Ω–∞—á–µ–Ω–Ω—è totalMinutes (–∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ö–≤–∏–ª–∏–Ω) –≤ —Ä—è–¥–æ–∫ —É —Ñ–æ—Ä–º–∞—Ç—ñ –≥–æ–¥–∏–Ω —Ç–∞ —Ö–≤–∏–ª–∏–Ω HH:MM.

// 70 –ø–æ–∫–∞–∂–µ 01:10
// 450 –ø–æ–∫–∞–∂–µ 07:30
// 1441 –ø–æ–∫–∞–∂–µ 24:01

// const totalMinutes = 1441;
// const hours = Math.floor(totalMinutes / 60);
// const minutes = totalMinutes % 60;
// const result = `${hours.toString().padStart(2, '0')}:${minutes.toString().padStart(2, '0')}`
// console.log(result);



// Task - 3

// –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —â–æ–± —É–Ω–∏–∫–Ω—É—Ç–∏ –ø–æ–º–∏–ª–æ–∫

// const name = 'Harry'
// const message = `Hello my name is ${name}`
// console.log(message);

const delivery = 25;
const price = 190;
const message = `Total purchase, price ${delivery + price}`;

console.log(message);

// Task - 4
// –í–∏–∫–æ–Ω–∞–π —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–æ–¥—É —Ç–∞–∫, —â–æ–± —É –∑–º—ñ–Ω–Ω—É value –ø—Ä–∏—Å–≤–æ—é–≤–∞–ª–æ—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó incomingValue, —è–∫—â–æ –≤–æ–Ω–æ –Ω–µ —Ä—ñ–≤–Ω–µ undefined –∞–±–æ null. –í —ñ–Ω—à–æ–º—É –≤–∏–ø–∞–¥–∫—É –º–∞—î –ø—Ä–∏—Å–≤–æ—é–≤–∞—Ç–∏—Å—è –∑–Ω–∞—á–µ–Ω–Ω—è defaultValue. –ü–µ—Ä–µ–≤—ñ—Ä —Ä–æ–±–æ—Ç—É —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –Ω–∞—Å—Ç—É–ø–Ω–∏—Ö –∑–Ω–∞—á–µ–Ω—å –∑–º—ñ–Ω–Ω–æ—ó incomingValue: null, undefined, 0, false. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π –æ–ø–µ—Ä–∞—Ç–æ—Ä ?? (nullish coalescing operator).

// const incomingValue = 0;
// const defaultValue = 10;
// const value = null ?? defaultValue;
// console.log(value);


// const KEY_AUTHORIZATION = 'qwerty111';
// console.log(KEY_AUTHORIZATION);